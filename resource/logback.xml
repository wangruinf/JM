<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<jmxConfigurator />

	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 典型的日志pattern -->
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 演示按时间滚动的策略 -->
	<appender name="defaultlogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/tmp/logs/showcase.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/tmp/logs/showcase.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- 保留 30天数据，默认无限-->
			<maxHistory>30</maxHistory>
		</rollingPolicy>

		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 按文件大小滚动的策略 -->
	<appender name="metricsLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/tmp/logs/metrics.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>/tmp/logs/metrics.%i.log</fileNamePattern>
			<!-- 最多保留10个文件，默认是7 -->
      		<maxIndex>10</maxIndex>
		</rollingPolicy>

		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      		<maxFileSize>10MB</maxFileSize>
      	</triggeringPolicy>

		<encoder>
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 综合时间与大小的滚动策略，先按小时滚动，小时内的文件大于10mb时再按大小滚动 -->
	<appender name="businessLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/tmp/logs/business.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/tmp/logs/business-%d{yyyy-MM-dd_HH}.%i.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<pattern>%d{HH:mm:ss.SSS},%msg%n</pattern>
		</encoder>
	</appender>




    <!-- project default level -->


	<!-- business log 使用独立的appender，不继承Root的appender -->
	<logger name="business" level="INFO" additivity="false">
		<appender-ref ref="businessLogFile" />
	</logger>

	<!-- metrics log 使用独立的appender，不继承Root的appender -->
	<logger name="metrics" level="INFO" additivity="false">
		<appender-ref ref="metricsLogFile" />
	</logger>

	<!--log4jdbc -->
	<logger name="jdbc.sqltiming" level="INFO"/>

	<!-- springside modules -->
	<logger name="org.springside.modules" level="INFO" />

	<!-- cxf inbound/outbound logger -->
	<logger name="org.apache.cxf.services" level="INFO" />

    <!--日志异步到数据库 -->
    <!--appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
            <dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <driverClass>com.mysql.jdbc.Driver</driverClass>
                <url>jdbc:mysql://127.0.0.1:3306/junmei</url>
                <user>junmei</user>
                <password>junmei</password>
            </dataSource>
        </connectionSource>
        <insertHeaders>true</insertHeaders>
    </appender>


    <logger name="com.wr.unit" level="INFO ERROR debug trace" >
        <appender-ref ref="DB" />
    </logger-->

    <!--logger name="org.springframework" level="INFO ERROR debug trace" >
        <appender-ref ref="console" />
    </logger -->

    <!--logger name="org.apache.shiro" level="INFO ERROR debug trace" >
        <appender-ref ref="console" />
    </logger -->

	<logger name="com.wr.unit" level="INFO ERROR debug trace" >
        <appender-ref ref="console" />
    </logger>


</configuration>